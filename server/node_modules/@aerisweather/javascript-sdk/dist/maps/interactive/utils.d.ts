import Account from '../../account/Account';
import ApiRequest from '../../network/api/ApiRequest';
import MapRequest from '../../network/maps/MapRequest';
import { TileSource, VectorSource, GeoJsonSource, TextSource } from './sources';
import { TileSourceOptions, VectorSourceOptions, OverlayFactory } from "../types";
import Layers from '../Layers';
import { ApiAction } from '../../types/request.enum';
export declare const getSourceId: (id: string) => string;
export declare const apiRequestForConfig: (account: Account, config: {
    service?: ApiRequest;
    request?: {
        server?: string;
        endpoint?: string;
        action?: ApiAction;
        parameters?: any;
    };
}) => ApiRequest;
export declare const mapRequestForConfig: (account: Account, config: any) => MapRequest;
export declare const createTileSource: (identifier: string, config: TileSourceOptions, factory: OverlayFactory) => TileSource;
export declare const createVectorSource: (identifier: string, config: VectorSourceOptions) => VectorSource;
export declare const createGeoJsonSource: (identifier: string, config: VectorSourceOptions) => GeoJsonSource;
export declare const createTextSource: (identifier: string, config: VectorSourceOptions) => TextSource;
export declare const createSource: (identifier: string, type: string, config: any, factory: OverlayFactory) => any;
export declare const identifierForLayer: (layer: string) => string;
export declare const createAerisSource: (layer: string, config: any, factory: OverlayFactory, layersMetadata: Layers) => any;
