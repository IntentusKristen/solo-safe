"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _VectorSource = _interopRequireDefault(require("./VectorSource"));

var _utils = require("../../../utils");

var _TextDataAnimator = _interopRequireDefault(require("./TextDataAnimator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * `TextSource` is an object that is responsible for loading data and managing a series of text
 * annotations on a map view.
 */
class TextSource extends _VectorSource.default {
  /**
   * Initializes a new point data source instance configured with the specified AMP layer code
   * and API service.
   *
   * @param layer
   * @param service
   * @param opts
   */
  constructor(key, opts) {
    var _a;

    super(key, opts);

    if ((_a = this.opts.animation) === null || _a === void 0 ? void 0 : _a.enabled) {
      this._animator = new _TextDataAnimator.default(this, this.opts.animation);
    }
  }

  processRecord(record) {
    record = (0, _utils.cloneDeep)(record);
    let keypath = (0, _utils.get)(this.opts, 'data.properties.value');

    if (!(0, _utils.isFunction)(keypath)) {
      keypath = (keypath || '').replace(/^periods\./, ''); // set initial marker text to first period value

      if (record.periods) {
        keypath = `periods[0].${keypath}`;
      }
    }

    record.value = record.value || ((0, _utils.isFunction)(keypath) ? keypath(record) : (0, _utils.get)(record, keypath));
    return record;
  }

}

var _default = TextSource;
exports.default = _default;
module.exports = exports.default;