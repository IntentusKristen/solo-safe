/// <reference types="leaflet" />
import LeafletLayer, { LeafletLayerOptions } from './Layer';
import MapRequest from '../../../../../network/maps/MapRequest';
export interface LeafletTileLayerOptions extends LeafletLayerOptions {
    url?: string;
    service?: any;
}
declare class LeafletTileLayer extends LeafletLayer<LeafletTileLayerOptions, L.TileLayer> {
    private _service;
    constructor(layer: string, service: MapRequest, opts?: any, id?: string);
    /**
     * Updates the tile or image url for the layer.
     *
     * @param {string} url
     * @memberof TileLayer
     */
    setUrl(url: string): void;
    setOpacity(value: number): void;
    setZIndex(index: number): void;
    protected updateVisibility(visible: boolean): void;
    protected createRenderable(): any;
}
export default LeafletTileLayer;
