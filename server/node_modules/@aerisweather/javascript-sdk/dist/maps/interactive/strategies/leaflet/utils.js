"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.markerIconFromStyle = exports.formatLayerOptions = void 0;

var _SVG = require("../../../../display/SVG");

var _utils = require("../../../../utils");

const formatLayerOptions = opts => {
  const formatted = {
    stroke: false,
    fill: false
  };

  if (opts.stroke) {
    formatted.stroke = true;
    formatted.color = opts.stroke.color;
    formatted.opacity = opts.stroke.opacity;
    formatted.weight = opts.stroke.width;
    formatted.lineCap = opts.stroke.lineCap;
    formatted.lineJoin = opts.stroke.lineJoin;
    formatted.dashArray = opts.stroke.dashArray;
    formatted.dashOffset = opts.stroke.dashOffset;
  }

  if (opts.fill) {
    formatted.fill = true;
    formatted.fillColor = opts.fill.color;
    formatted.fillOpacity = opts.fill.opacity;
    formatted.fillRule = opts.fill.rule || 'nonzero';
  }

  if (formatted.fill && !(0, _utils.isset)(opts.fillOpacity)) opts.fillOpacity = 1;
  if (formatted.stroke && !(0, _utils.isset)(opts.strokeOpacity)) opts.strokeOpacity = 1;
  return formatted;
};

exports.formatLayerOptions = formatLayerOptions;

const markerIconFromStyle = style => {
  if (style.html) {
    return L.divIcon({
      html: style.html,
      iconSize: style.size,
      className: style.className || ''
    });
  }

  if (style.svg) {
    const [width, height] = style.size || [12, 12];
    return L.divIcon({
      html: _SVG.SVG.draw(width, height, style.svg),
      iconSize: style.size,
      className: style.className || ''
    });
  }

  if (style.icon) {
    const icon = style.icon;
    return L.icon({
      iconUrl: icon.url,
      iconRetinaUrl: icon.retinaUrl,
      iconSize: style.size,
      iconAnchor: icon.anchor,
      className: style.className || ''
    });
  }

  return null;
};

exports.markerIconFromStyle = markerIconFromStyle;