/// <reference types="mapbox-gl" />
import MapLayer from '../../../layers/MapLayer';
/**
 * `Layer` is a container class that is responsible for creating and managing a Mapbox
 * source and associated layer representation on a Mapbox map.
 */
declare class MapboxLayer<T, S extends mapboxgl.Layer> extends MapLayer<mapboxgl.Map, T, S> {
    source: any;
    private _relativeTo;
    /**
     * Source identifier on the map.
     *
     * @readonly
     * @type {string}
     * @memberof Layer
     */
    get sourceId(): string;
    /**
     * The parent layer identifier for the layer, if any. When specified, this layer will be
     * rendered on the map below the layer associated with the parent identifier.
     *
     * @type {string}
     * @memberof Layer
     */
    get parentId(): string;
    set parentId(value: string);
    setOpacity(value: number): void;
    setZIndex(value: number): void;
    exists(): boolean;
    invalidate(): void;
    protected createRenderable(): S;
    protected updateVisibility(visible: boolean): void;
    protected addToMap(map: mapboxgl.Map): void;
    protected removeFromMap(map: mapboxgl.Map): void;
}
export default MapboxLayer;
