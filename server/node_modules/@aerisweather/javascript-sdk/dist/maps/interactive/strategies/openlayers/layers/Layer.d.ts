/// <reference types="openlayers" />
import MapLayer, { MapLayerOptions } from '../../../layers/MapLayer';
export interface OpenLayersLayerOptions extends MapLayerOptions {
}
/**
 * `Layer` is a container class that is responsible for creating and managing a OpenLayers
 * source and associated layer representation on a OpenLayers map.
 */
declare class OpenLayersLayer<T extends OpenLayersLayerOptions, S extends ol.layer.Layer> extends MapLayer<ol.Map, T, S> {
    source: any;
    private _relativeTo;
    protected _targetIndex: number;
    setOpacity(value: number): void;
    setZIndex(index: number): void;
    exists(): boolean;
    invalidate(): void;
    protected createRenderable(): S;
    protected updateVisibility(visible: boolean): void;
    protected addToMap(map: ol.Map, index?: number): void;
    protected removeFromMap(map: ol.Map): void;
}
export default OpenLayersLayer;
