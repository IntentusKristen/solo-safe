"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.PolygonMapElement = exports.PolylineMapElement = exports.MarkerMapElement = void 0;

var _utils = require("../../utils");

/**
 * An object that represents a map element and contains the data, style and renderable object
 * associated with the element.
 */
class MapElement {
  constructor(data, style, renderable) {
    this.data = data;
    this.style = style;
    this.renderable = renderable;

    if (data.id) {
      this.id = data.id;
    }
  }
  /**
   * Returns the coordinate bounds that contains the element's geometry.
   *
   * @readonly
   * @type {CoordinateBounds}
   * @memberof MapElement
   */


  get bounds() {
    if (this.geometry && (0, _utils.has)(this.geometry, 'bounds')) {
      return this.geometry.bounds();
    }

    return null;
  }
  /**
   * A Boolean value indicating whether the element should adjust its opacity when the parent data
   * source's opacity changes. Default value is `true`.
   *
   * @readonly
   * @type {boolean}
   * @memberof MapElement
   */


  get adjustOpacity() {
    var _a;

    const adjust = (_a = this.style) === null || _a === void 0 ? void 0 : _a.adjustOpacity;
    return (0, _utils.isset)(adjust) ? adjust : true;
  }

}
/**
 * A marker map element.
 */


class MarkerMapElement extends MapElement {}
/**
 * A polyline map element.
 */


exports.MarkerMapElement = MarkerMapElement;

class PolylineMapElement extends MapElement {}
/**
 * A polygon map element.
 */


exports.PolylineMapElement = PolylineMapElement;

class PolygonMapElement extends MapElement {}

exports.PolygonMapElement = PolygonMapElement;
var _default = MapElement;
exports.default = _default;