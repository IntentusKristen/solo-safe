/**
 * Events that can be triggered by an `InteractiveMap` instance.
 */
export declare const enum MapEvent {
    /** Fired when the map instance has initialized and is ready. */
    READY = "ready",
    /** Fired when the map is initialized once its center and zoom have been set for the first time. */
    LOAD = "load",
    /** Fired when the user clicks (or taps) the map. */
    CLICK = "click",
    /** Fired when the user double-clicks (or double-taps) the map. */
    DBL_CLICK = "dblclick",
    /** Fired when the user pushes the mouse button on the map. */
    MOUSE_DOWN = "mousedown",
    /** Fired when the user releases the mouse button on the map. */
    MOUSE_UP = "mouseup",
    /** Fired when the mouse enters the map. */
    MOUSE_OVER = "mouseover",
    /** Fired when the mouse leaves the map. */
    MOUSE_OUT = "mouseout",
    /** Fired while the mouse moves over the map. */
    MOUSE_MOVE = "mousemove",
    /** Fired when the map is resized. */
    RESIZE = "resize",
    /** Fired when the map viewport changes, either after a bounds/center or zoom change. */
    CHANGE_BOUNDS = "change:bounds",
    /** Fired when the visible map bounds is about to change, either before a center change, pan or zoom. */
    BEFORE_CHANGE_BOUNDS = "before:change:bounds",
    /** Fired after the visible map bounds has changed as a result of a center change, pan or zoom. */
    AFTER_CHANGE_BOUNDS = "after:change:bounds",
    /** Fired when the center of the map viewport has changed. */
    CHANGE_CENTER = "change:center",
    /** Fired when the zoom level has changed. */
    CHANGE_ZOOM = "change:zoom",
    /** Fired when the map unit has changed, either imperial or metric. */
    CHANGE_UNITS = "change:units",
    /** Fired repeatedly during any movement of the pan, including pan and fly animations. */
    MOVE = "move",
    /** Fired when the map starts changing (e.g. user starts dragging the map). */
    MOVE_START = "move:start",
    /** Fired when the center of the map stops changning (e.g. user stopped dragging the map). */
    MOVE_END = "move:end",
    /** Fired repeatedly during any change in zoom level, including zoom and fly animations. */
    ZOOM = "zoom",
    /** Fired when the map zoom is about to change (e.g. before zoom animation). */
    ZOOM_START = "zoom:start",
    /** Fired when the map has changed, after any animations. */
    ZOOM_END = "zoom:end",
    /** Fired when the user clicks (or taps) a marker on the map. */
    MARKER_CLICK = "marker:click",
    MARKER_MOUSEOVER = "marker:mouseover",
    MARKER_MOUSEOUT = "marker:mouseout",
    /** Fired repeatedly while the user drags a marker. */
    MARKER_DRAG = "marker:drag",
    /** Fired when the user starts dragging a marker. */
    MARKER_DRAG_START = "marker:dragstart",
    /** Fired when the user stops dragging a marker. */
    MARKER_DRAG_END = "marker:dragend",
    /** Fired when the user clicks (or taps) a shape on the map. */
    SHAPE_CLICK = "shape:click",
    SHAPE_MOUSEOVER = "shape:mouseover",
    SHAPE_MOUSEOUT = "shape:mouseout",
    /** Fired when the map timeline begins playback. */
    TIMELINE_PLAY = "timeline:play",
    /** Fired when the map timeline stops playback. */
    TIMELINE_STOP = "timeline:stop",
    /** Fired when the current time/date for the map timeline changes. */
    TIMELINE_CHANGE = "timeline:change",
    /** Fired when a layer is added to the map. */
    LAYER_ADD = "layer:add",
    /** Fired when a layer is removed from the map. */
    LAYER_REMOVE = "layer:remove",
    LAYER_UPDATE = "layer:update",
    /** Fired when a content source is added to the map. */
    SOURCE_ADD = "source:add",
    /** Fired when a content source is removed from the map. */
    SOURCE_REMOVE = "source:remove",
    /** Fired when a data source has starting loading new data. */
    SOURCE_LOAD_START = "source:load:start",
    /** Fired when a data source has completed loading data. */
    SOURCE_LOAD_DONE = "source:load:done"
}
