"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _CoordinateBounds = _interopRequireDefault(require("../../geo/CoordinateBounds"));

var _utils = require("../../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class LineString {
  constructor(coords) {
    if ((0, _utils.isEmpty)(coords) || !(0, _utils.isArray)(coords)) {
      throw new Error('Invalid coordinates for LineString');
    }

    if (coords.length < 2) {
      throw new Error('Coordinate count in LineString is less than 2');
    }

    this.coordinates = coords.map(latlon => {
      if (latlon.length < 2) {
        throw new Error('Coordinate dimension count is less than 2');
      }

      const [lon, lat] = latlon;
      return {
        lat,
        lon
      };
    });
  }

  add(coord) {
    this.coordinates.push(coord);
  }

  toArray(reversed = false) {
    return this.coordinates.map(coord => reversed ? [coord.lon, coord.lat] : [coord.lat, coord.lon]);
  }

  bounds() {
    return _CoordinateBounds.default.fromPoints(this.coordinates);
  }

}

var _default = LineString;
exports.default = _default;
module.exports = exports.default;