"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ModuleGroup = _interopRequireDefault(require("../ModuleGroup"));

var _systems = require("./systems");

var _invests = require("./invests");

var _windfields = require("./windfields");

var _breakpoints = require("./breakpoints");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __awaiter = void 0 && (void 0).__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

class TropicalGroup extends _ModuleGroup.default {
  get id() {
    return 'tropical';
  }

  load() {
    return __awaiter(this, void 0, void 0, function* () {
      const systems = yield (0, _systems.loader)();
      const invests = yield (0, _invests.loader)();
      const windfields = yield (0, _windfields.loader)();
      const breakpoints = yield (0, _breakpoints.loader)();
      return new Promise((resolve, reject) => {
        this._modules = [systems, invests, windfields, breakpoints].map(Module => new Module.default()); // eslint-disable-line new-cap

        resolve(this._modules);
      });
    });
  }

  controls() {
    return {
      title: 'Tropical',
      buttons: this.modules ? this.modules.map(m => m.controls()) : []
    };
  }

}

var _default = TropicalGroup;
exports.default = _default;
module.exports = exports.default;