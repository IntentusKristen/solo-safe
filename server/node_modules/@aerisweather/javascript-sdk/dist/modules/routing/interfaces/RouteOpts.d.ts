import { MapSourceModuleOptions } from '../../MapSourceModule';
import { RouteConfig } from '.';
export interface RouteOptions extends MapSourceModuleOptions {
    /**
     * Route group title. This value is only used when multiple routes are defined for the module
     * instance.
     */
    title?: string;
    /**
     * Array of weather type codes to include in the weather options for the layer group's control.
     *
     * Default value is all codes, e.g. `['temps', 'winds', 'windgust', 'weather', 'alerts']`. The
     * active weather type determine which weather data is plotted along the route.
     */
    weatherTypes?: string[];
    /**
     * URL string or a callback function that receives the currently active route and returns the
     * URL path to use when requesting route data from a remote source.
     */
    url?: string | ((id: string) => string);
    /**
     * Directions API service configuration.
     */
    service?: {
        /**
         * Directions API service to use.
         */
        type: 'mapbox' | 'google';
        /**
         * Access key to use with the third-party directions API. Refer to the desired service's
         * documentation for more information
         */
        accessKey: string;
    };
    /**
     * Array of route configuration objects defining the routes for the module instance.
     */
    routes: RouteConfig[];
    /**
     * Route update interval, in seconds. Default value is `0`, which disables auto-updating.
     *
     * Minimum refresh rate is 60 seconds.
     *
     * @type {number}
     */
    refresh?: number;
    /**
     * Amount of padding in pixels to use when fitting the bounds of a route to a map view.
     *
     * You can provide one, two or four values. A single value will be applied to all sides. Two
     * values correspond to the horizontal and vertical sides respectively. Four values correspond
     * to the top, right, bottom and left sides of the map.
     *
     * Default is `[100, 100]` or `[0, 0]` for compact (mobile) viewports.
     */
    insets?: number[];
    /**
     * A Boolean indicating whether the route's info panel should be presented when the route is
     * selected and active. Default value is `true` for desktop and `false` for mobile devices.
     */
    showInfoOnSelect?: boolean;
    /**
     * Callback function called when remote route data has been loaded and configured but before
     * rendering.
     */
    onRouteData?: (data: any) => any;
    /**
     * Callback function called when weather data for the active route has loaded but before
     * rendering.
     */
    onWeatherData?: (data: any) => any;
}
