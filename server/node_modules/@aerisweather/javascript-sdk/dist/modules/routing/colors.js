"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getColor = exports.COLORS = void 0;

var _utils = require("../../utils");

var _utils2 = require("./utils");

const COLORS = {
  temps: [[-60, '#8f00ca'], [-55, '#7900a1'], [-50, '#630078'], [-45, '#840088'], [-40, '#a50099'], [-35, '#c900ba'], [-30, '#ed00dc'], [-25, '#f138ed'], [-20, '#f671ff'], [-15, '#e999f6'], [-10, '#dcc1ed'], [-5, '#7b60b4'], [0, '#1b007b'], [5, '#4428bd'], [10, '#6e51ff'], [15, '#8483ff'], [20, '#9bb6ff'], [25, '#59adfd'], [30, '#18a5fc'], [35, '#1052f1'], [40, '#0900e7'], [45, '#0e5873'], [50, '#14b000'], [55, '#84c204'], [60, '#f5d508'], [65, '#eba304'], [70, '#e17200'], [75, '#ea5200'], [80, '#f33300'], [85, '#e11900'], [90, '#d00000'], [95, '#a10000'], [100, '#720000'], [105, '#a00023'], [110, '#ce0046'], [115, '#e6256f'], [120, '#ff4b98']],
  winds: [[2, '#0050ff'], [3, '#007bff'], [4, '#1087ff'], [6, '#17b7fe'], [8, '#1bd3ff'], [10, '#34ff87'], [12.5, '#72ff09'], [15, '#b4ff08'], [17.5, '#efff0b'], [20, '#fee20a'], [25, '#f0b90a'], [30, '#ed9909'], [35, '#fd8609'], [40, '#fd5d08'], [45, '#fb3706'], [50, '#fb311b'], [55, '#fb2e28'], [60, '#fb2b36'], [65, '#fb3c44'], [70, '#fb4d53'], [75, '#fc5e63'], [80, '#fd7074'], [85, '#f87b7e'], [90, '#f48688'], [95, '#f09092'], [100, '#ec9a9c']]
};
exports.COLORS = COLORS;
const WEATHER = {
  rain: '#03be17',
  ice: '#f200b9',
  mix: '#a604dc',
  snow: '#0465dc',
  storms: '#ce0000',
  fog: '#f2cc00'
};

const getColorScale = type => {
  if (type === 'windgusts') {
    type = 'winds';
  }

  return COLORS[type];
};

const getColor = (type, data) => {
  let result = '#999999';
  const colors = getColorScale(type);

  if (type === 'alerts') {
    const alertColor = (0, _utils.get)(data, 'details.color');

    if ((0, _utils.isset)(alertColor)) {
      result = `#${alertColor}`;
    }
  } else {
    const prop = (0, _utils2.getPropForDataType)(type);
    const value = (0, _utils.get)(data, prop.replace(/periods\./, 'periods.0.'));

    if (type === 'weather') {
      let code = null;

      if (/(storm)/i.test(value)) {
        code = 'storms';
      } else if (/(rain|showers|drizzle)/i.test(value)) {
        code = 'rain';
      } else if (/(ice|freezing (rain|drizzle))/i.test(value)) {
        code = 'ice';
      } else if (/(rain\sand\ssnow|sleet)/i.test(value)) {
        code = 'mix';
      } else if (/(snow|flurries)/i.test(value)) {
        code = 'snow';
      } else if (/(fog)/i.test(value)) {
        code = 'fog';
      }

      if (WEATHER[code]) {
        result = WEATHER[code];
      }
    } else if (colors) {
      colors.forEach(([val, color]) => {
        if (value >= val) {
          result = color;
        }
      });
    }
  }

  return result;
};

exports.getColor = getColor;