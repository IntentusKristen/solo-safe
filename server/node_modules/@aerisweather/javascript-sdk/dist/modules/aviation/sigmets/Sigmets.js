"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _MapSourceModule = require("../../MapSourceModule");

const colors = {
  TURB: '#e98e00',
  ICE: '#2452e9',
  CONVECTIVE: '#e90000',
  TS: '#ffe300'
};

const getColor = code => {
  code = (code || 'none').toUpperCase();
  return colors[code] || '#999999';
};

class Sigmets extends _MapSourceModule.BaseMapSourceModule {
  get id() {
    return this.opts.id || 'aviation-sigmets';
  }

  source() {
    return {
      type: 'geojson',
      data: {
        url: '//uat.aerisweather.com/demos/data/sigmet.json',
        properties: {
          id: 'icaoId',
          category: 'hazard'
        }
      },
      style: {
        polygon: item => ({
          fill: {
            color: getColor(item.hazard),
            opacity: 0.4
          },
          stroke: {
            color: getColor(item.hazard),
            width: 2
          }
        })
      }
    };
  }

  controls() {
    return {
      value: this.id,
      title: 'SIGMETs'
    };
  }

  legend() {
    return null;
  }

  infopanel() {
    return {
      view: {
        views: [{
          data: data => data.sigmet,
          renderer: data => {
            if (!data) return null;
            return `<div class="sigmet">${(data.rawAirSigmet || '').replace(/\n/g, '<br>')}</div>`;
          }
        }]
      }
    };
  }

  onShapeClick(shape, data) {
    data = data || {}; // this.app.showInfo('sigmet', `${props.icaoId} - ${utils.strings.toName(props.hazard)} SIGMET`, { sigmet: props });

    this.showInfoPanel(`${data.icaoId} - ${data.hazard} SIGMET`, {
      sigmet: data
    });
  }

}

var _default = Sigmets;
exports.default = _default;
module.exports = exports.default;