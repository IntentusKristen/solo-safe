"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _WeatherCode = _interopRequireDefault(require("./WeatherCode"));

var _utils = require("./utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class StationPlotLegend {
  render(obs) {
    const windSpeed = (0, _utils.roundToInterval)(obs.windSpeedKTS, 5);
    const windGust = (0, _utils.roundToInterval)(obs.windGustKTS, 5);
    const direction = obs.windDirDEG;
    const weather = new _WeatherCode.default(obs.weatherPrimaryCoded, obs);
    return `
			<g class="wind-barb-legend">
				${this.stationId()}
				${this.temp()}
				${this.pressure()}
				${this.dewpoint()}
				${this.skyCover()}
				${this.wind(windSpeed, windGust, direction)}
				${weather.icon && this.weatherCode()}
			</g>
		`;
  }

  stationId() {
    return `
			${(0, _utils.text)('Station ID', 35, 33)}
			${(0, _utils.line)(30.5, 31, 30, 30)}
		`;
  }

  temp() {
    return `
			${(0, _utils.text)('Temp (F)', 17, 13)}
			${(0, _utils.line)(14.5, 14, 15, 15)}
		`;
  }

  pressure() {
    return `
			${(0, _utils.text)('Sea Level Pressure (mB)', 35, 13)}
			${(0, _utils.line)(30, 14, 29.5, 15)}
		`;
  }

  dewpoint() {
    return `
			${(0, _utils.text)('Dew Point (F)', 17, 33)}
			${(0, _utils.line)(14.5, 31, 15, 30)}
		`;
  }

  wind(windSpeed, windGust, direction) {
    const rotation1 = direction > 90 && direction < 270 ? direction - 180 : direction;
    const rotation2 = direction > 90 && direction < 270 ? 180 - direction : 360 - direction;
    const translation = direction > 90 && direction < 270 ? 19 : -19;
    return `
			<g transform="rotate(${rotation1 || 0} 12 12) translate(0 ${translation}) rotate(${rotation2 || 0} 12 12)">
				${(0, _utils.text)('Wind', 23, 22.5, {
      anchor: 'middle'
    })}
				${windGust > windSpeed && (0, _utils.text)('(Gust)', 23, 24, {
      fill: 'red',
      anchor: 'middle'
    })}
			</g>
		`;
  }

  skyCover() {
    return `
			${(0, _utils.text)('Sky Cover', 22, 32, {
      anchor: 'middle'
    })}
			${(0, _utils.text)('&', 22, 33.5, {
      anchor: 'middle'
    })}
			${(0, _utils.text)('Flight Rule', 22, 35, {
      anchor: 'middle'
    })}
			${(0, _utils.line)(22, 30, 22, 26)}
		`;
  }

  weatherCode() {
    return `
			${(0, _utils.text)('Weather', 11, 22.5, {
      link: 'https://www.aviationweather.gov/metar/symbol'
    })}
			${(0, _utils.line)(11.5, 22, 13, 22)}
		`;
  }

}

var _default = StationPlotLegend;
exports.default = _default;
module.exports = exports.default;