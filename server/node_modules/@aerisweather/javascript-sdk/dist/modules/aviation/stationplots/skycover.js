"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.skycover = exports.circle = exports.pie = exports.DEFAULT_Y = exports.DEFAULT_X = exports.BASE_RADIUS = void 0;
const BASE_RADIUS = 0.9;
exports.BASE_RADIUS = BASE_RADIUS;
const DEFAULT_X = 22;
exports.DEFAULT_X = DEFAULT_X;
const DEFAULT_Y = 22;
/*
 * Builds the sky cover symbol for sky obscured
 */

exports.DEFAULT_Y = DEFAULT_Y;

const obscured = ({
  x = DEFAULT_X,
  y = DEFAULT_Y,
  radius = BASE_RADIUS * 2,
  fill = 'transparent',
  rotation = -90,
  strokeWidth = 0.5,
  strokeColor = 'black'
} = {}) => {
  const x1 = x - radius;
  const x2 = x + radius;
  return `<line
		x1="${x1}"
		x2="${x2}"
		y1="${y}"
		y2="${y}"
		stroke="${strokeColor}"
		stroke-width="${strokeWidth}"
		transform="rotate(-45 ${x} ${y})"/>
		<line
		x1="${x1}"
		x2="${x2}"
		y1="${y}"
		y2="${y}"
		stroke="${strokeColor}"
		stroke-width="${strokeWidth}"
		transform="rotate(45 ${x} ${y})"
	/>`;
};
/*
 * Builds the sky cover symbol for "missing"
 */


const missing = ({
  strokeWidth = 0.5,
  strokeColor = 'black'
} = {}) => `
	<line
		x1="11.25"
		x2="11"
		y1="10.5"
		y2="13.5"
		stroke="${strokeColor}"
		stroke-width="${strokeWidth}"
		stroke-linecap="round"
	/>
	<line
		x1="11.25"
		x2="12"
		y1="10.5"
		y2="12.5"
		stroke="${strokeColor}"
		stroke-width="${strokeWidth}"
		stroke-linecap="round"
	/>
	<line
		x1="12.75"
		x2="12"
		y1="10.5"
		y2="12.5"
		stroke="${strokeColor}"
		stroke-width="${strokeWidth}"
		stroke-linecap="round"
	/>
	<line
		x1="12.75"
		x2="13"
		y1="10.5"
		y2="13.5"
		stroke="${strokeColor}"
		stroke-width="${strokeWidth}"
		stroke-linecap="round"
	/>
`;
/*
 * Builds the pie symbol representing the amount of sky coverage there is.
 */


const pie = ({
  x = DEFAULT_X,
  y = DEFAULT_Y,
  radius = BASE_RADIUS,
  fill = 'transparent',
  rotation = -90,
  strokeWidth = BASE_RADIUS * 2,
  strokeColor = 'black',
  fillPercentage = 1
} = {}) => `
	<circle
		cx="${x}"
		cy="${y}"
		r="${radius}"
		fill="${fill}"
		stroke="${strokeColor}"
		stroke-width="${strokeWidth}"
		stroke-dasharray="${2 * Math.PI * radius * fillPercentage} ${2 * Math.PI * radius}"
		transform="rotate(${rotation} ${x} ${y})"
	/>
`;
/*
 * Builds the backing circle of the sky cover symbol
 */


exports.pie = pie;

const circle = ({
  x = DEFAULT_X,
  y = DEFAULT_Y,
  radius = BASE_RADIUS * 2,
  fill = 'white',
  strokeWidth = 0.5,
  strokeColor = 'black'
} = {}) => `
	<circle
		cx="${x}"
		cy="${y}"
		r="${radius}"
		fill="${fill}"
		stroke="#ffffff"
		stroke-width="${strokeWidth + 1.5}"
	/>
	<circle
		cx="${x}"
		cy="${y}"
		r="${radius}"
		fill="${fill}"
		stroke="#000000"
		stroke-width="${strokeWidth + 0.5}"
	/>
	<circle
		cx="${x}"
		cy="${y}"
		r="${radius}"
		fill="${fill}"
		stroke="${strokeColor}"
		stroke-width="${strokeWidth}"
	/>
`;
/*
 * Builds the hand of the wind barb.
 */


exports.circle = circle;

const hand = ({
  x1 = DEFAULT_X,
  y1 = DEFAULT_X - BASE_RADIUS * 2,
  x2 = DEFAULT_Y,
  y2 = DEFAULT_Y + BASE_RADIUS * 2,
  strokeColor = "black",
  strokeWidth = 0.75,
  rotation = 0
} = {}) => {
  const centerX = x2 - Math.abs((x2 - x1) / 2);
  const centerY = y2 - Math.abs((y2 - y1) / 2);
  return `
		<line
			x1="${x1}"
			y1="${y1}"
			x2="${x2}"
			y2="${y2}"
			stroke="${strokeColor}"
			stroke-width="${strokeWidth}"
			transform="rotate(${rotation} ${centerX} ${centerY})"
		/>
	`;
};

const symbols = {
  missing: color => `
		${circle({
    strokeColor: color
  })}
		${missing({
    strokeColor: color
  })}
	`,
  0: color => `
		${circle({
    strokeColor: color
  })}
	`,
  1: color => `
		${circle({
    strokeColor: color
  })}
		${hand({
    strokeColor: color
  })}
	`,
  2: color => `
		${circle({
    strokeColor: color
  })}
	`,
  3: color => `
		${circle({
    strokeColor: color
  })}
		${pie({
    strokeColor: color,
    fillPercentage: 0.25
  })}
		${hand({
    strokeColor: color
  })}
	`,
  4: color => `
		${circle({
    strokeColor: color
  })}
		${pie({
    strokeColor: color,
    fillPercentage: 0.5
  })}
	`,
  5: color => `
		${circle({
    strokeColor: color
  })}
		${pie({
    strokeColor: color,
    fillPercentage: 0.5
  })}
		${hand({
    strokeColor: color,
    rotation: 90
  })}
	`,
  6: color => `
		${circle({
    strokeColor: color
  })}
		${pie({
    strokeColor: color,
    fillPercentage: 0.75
  })}
	`,
  7: color => `
		${circle({
    strokeColor: color
  })}
		${pie({
    strokeColor: color
  })}
		${hand({
    strokeColor: '#ffffff'
  })}
	`,
  8: color => `
		${circle({
    strokeColor: color
  })}
		${pie({
    strokeColor: color
  })}
	`,
  9: color => `
		${circle({
    strokeColor: color
  })}
		${obscured({
    strokeColor: color
  })}
	`
};

const skycover = (code, color = '#000') => {
  if (symbols[code]) {
    return symbols[code](color);
  }

  return symbols.missing(color);
};

exports.skycover = skycover;