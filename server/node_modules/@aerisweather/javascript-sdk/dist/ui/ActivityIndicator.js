"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _utils = require("../utils");

var _DOM = _interopRequireDefault(require("../display/DOM"));

var _globals = require("../globals");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class ActivityIndicator {
  constructor(opts = null) {
    this._opts = (0, _utils.extend)({
      strokeWidth: 4
    }, opts);
    this.render();
  }

  get $el() {
    return this._target;
  }

  get $path() {
    return (0, _DOM.default)(`.${_globals.Globals.cssPrefix}fill-path`, this.$el);
  }

  appendTo(target, styles = null) {
    const $target = (0, _DOM.default)(target);

    if ($target.length > 0) {
      $target.append(this.$el);
      this._target = (0, _DOM.default)(`.${_globals.Globals.cssPrefix}loader`, $target);

      if (styles) {
        this._target.css(styles);
      }
    }
  }

  startAnimating() {
    this.$el.addClass('animated');
  }

  stopAnimating() {
    this.$el.removeClass('animated');
  }

  render() {
    let isPercentage = false;
    let size = (0, _utils.get)(this._opts, 'size') || '100%';

    if ((0, _utils.isString)(size)) {
      if (/%$/.test(size) === false) {
        size = size.replace(/[0-9\.]/, '');
        size = parseFloat(size);
      } else {
        isPercentage = true;
      }
    }

    const s = (0, _utils.isString)(size) ? 60 : size;
    const center = Math.round(s / 2);
    const radius = Math.round(18 * (s / 60));
    const offset = Math.round(s / 2);
    const stroke = (0, _utils.get)(this._opts, 'strokeWidth') || 4;
    const sizeStr = isPercentage ? size : `${size}px`;
    this._target = (0, _DOM.default)(`
			<div class="${_globals.Globals.cssPrefix}loader" style="width: ${sizeStr}; height: ${sizeStr};">
				<svg version="1.1" class="${_globals.Globals.cssPrefix}filler-loader" width="${s}" height="${s}" style="margin-top: -${offset}px; margin-left: -${offset}px;">
					<circle class="${_globals.Globals.cssPrefix}fill-path" cx="${center}" cy="${center}" r="${radius}" stroke-width="${stroke}" />
				</svg>
			</div>
		`);
  }

}

var _default = ActivityIndicator;
exports.default = _default;
module.exports = exports.default;