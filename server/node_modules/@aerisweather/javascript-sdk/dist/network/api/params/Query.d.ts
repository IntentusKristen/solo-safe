import { Operator } from '../../../types/request.enum';
/**
 * A `QueryCondition` object stores information about a single property-value condition.
 */
export declare class QueryCondition {
    /**
     * The data property to query.
     *
     * @type {string}
     * @memberof QueryCondition
     */
    property: string;
    /**
     * The data value to query against.
     *
     * @type {(string|number)}
     * @memberof QueryCondition
     */
    value: string | number;
    /**
     * The operator to use when chaining this condition to successive conditions.
     *
     * @type {Operator}
     * @memberof QueryCondition
     */
    nextOperator: Operator;
    /**
     * Initializes a query condition instance for the specified property and value and optional
     * next operator.
     *
     * @param {string} property
     * @param {*} value
     * @param {Operator} [nextOperator=Operator.AND]
     * @memberof QueryCondition
     */
    constructor(property: string, value: any, nextOperator?: Operator);
    /**
     * Returns the formatted query string to be used with API requests.
     *
     * @returns {string}
     * @memberof QueryCondition
     */
    toString(): string;
}
/**
 * A `Query` object is a convenience wrapper for setting up and configuring a query string used
 * for API queries.
 */
declare class Query {
    private _conditions;
    /**
     * Initializes a query instance, optionally with an array of query conditions.
     *
     * @param {QueryCondition[]} [conditions=[]]
     * @memberof Query
     */
    constructor(conditions?: QueryCondition[]);
    /**
     * Adds a query condition.
     *
     * @param {QueryCondition} condition
     * @returns {Query}
     * @memberof Query
     */
    addCondition(condition: QueryCondition): Query;
    /**
     * Removes a query condition.
     *
     * @param {QueryCondition} condition
     * @returns {Query}
     * @memberof Query
     */
    removeCondition(condition: QueryCondition): Query;
    /**
     * Removes all query conditions.
     *
     * @returns {Query}
     * @memberof Query
     */
    removeAllConditions(): Query;
    /**
     * Returns the formatted string from all query conditions to be used for API requests.
     *
     * @returns {string}
     * @memberof Query
     */
    toString(): string;
}
export default Query;
