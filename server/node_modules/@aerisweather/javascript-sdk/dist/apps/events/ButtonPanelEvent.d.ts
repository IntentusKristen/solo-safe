/**
 * Events that can be triggered by a `ButtonPanel` instance.
 */
export declare const enum ButtonPanelEvent {
    /**
     * Fired when a button is selected.
     *
     * Event data provides the following properties:
     * ```
     * {
     *     id = string,
     *     value = string | Array<string> | Record<string, any>;
     *     options = Record<string, any>,
     *     segments = Array<string>;
     * }
     * ```
     */
    SELECT = "select",
    /**
     * Fired when a button is deselected.
     *
     * Event data provides the following properties:
     * ```
     * {
     *     id = string,
     *     value = string | Array<string> | Record<string, any>;
     *     options = Record<string, any>,
     *     segments = Array<string>;
     * }
     * ```
     */
    DESELECT = "deselect",
    /**
     * Fired when the selected value(s) of a segmented button of button group changes.
     *
     * Event data provides the following properties:
     * ```
     * {
     *     id = string,
     *     value = string | Array<string> | Record<string, any>;
     *     previous = string | Array<string> | Record<string, any>;
     *     options = Record<string, any>,
     *     segments = Array<string>;
     *     isFilter = boolean;
     *     reload = boolean;
     * }
     * ```
     */
    CHANGE = "change",
    /**
     * Fired when a control associated with the button changes (e.g. opacity slider control).
     *
     * Event data provides the following properties:
     * ```
     * {
     *     id = string,
     *     value = string | Array<string> | Record<string, any>;
     *     options = Record<string, any>,
     *     control = { id = string; value = string | number; }
     * }
     * ```
     */
    CONTROL_CHANGE = "control:change",
    /**
     * Fired when the content size of the panel changes, usually as a result of buttons being
     * added and/or removed and segmented buttons being expanded and/or collapsed.
     * */
    SIZE_CHANGE = "change:size",
    /**
     * Fired when a button is added to the panel.
     *
     * Event data provides the following properties:
     * ```
     * { button = Button }
     * ```
     */
    ADD_BUTTON = "button:add",
    /**
     * Fired when a button is removed from the panel.
     *
     * Event data provides the following properties:
     * ```
     * { button = Button }
     * ```
     */
    REMOVE_BUTTON = "button:remove"
}
