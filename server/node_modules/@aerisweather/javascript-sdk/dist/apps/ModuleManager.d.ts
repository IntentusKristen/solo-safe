import EventDispatcher from '../event/EventDispatcher';
import InteractiveMapApp from './InteractiveMapApp';
import IMapSourceModule from '../modules/interfaces/IMapSourceModule';
import IModuleGroup from '../modules/interfaces/IModuleGroup';
/**
 * A module manager is responsible for managing a series of modules associated with an application.
 *
 * @class ModuleManager
 */
declare class ModuleManager extends EventDispatcher {
    private _app;
    private _modules;
    /**
     * Initializes a module manager with the specified application.
     *
     * @param {InteractiveMapApp} app
     * @memberof ModuleManager
     */
    constructor(app: InteractiveMapApp);
    /**
     * Adds a module to the application.
     *
     * The specified module must either be an instance of a class that implements the
     * `IMapSourceModule` interface or a loader function that loads and initializes the module
     * on-demand.
     *
     * @param {IMapSourceModule} module
     * @param {*} [overrides=null]
     * @returns
     * @memberof ModuleManager
     */
    add(module: IMapSourceModule, overrides?: any, constructorOpts?: any): void;
    /**
     * Adds a module to the application and inserts its control at the specified index.
     *
     * The specified module must either be an instance of a class that implements the
     * `IMapSourceModule` interface or a loader function that loads and initializes the module
     * on-demand.
     *
     * @param index
     * @param module
     * @param overrides
     */
    insertAt(index: number, module: IMapSourceModule, overrides?: any, constructorOpts?: any): void;
    /**
     * Adds a module group to the application.
     *
     * @param {ModuleGroup} group
     * @param {*} [overrides=null]
     * @memberof ModuleManager
     */
    addGroup(group: IModuleGroup, overrides?: any): void;
    /**
     * Removes a module from the application.
     *
     * @param {IMapSourceModule} module
     * @memberof ModuleManager
     */
    remove(module: IMapSourceModule): void;
    removeById(identifier: string): void;
    private _onAppReady;
    private _setupSource;
    private _setupControls;
    private _moduleLegendCache;
    private _setupLegends;
    private _setupInfoPanel;
    private _setupModuleEvents;
    private _setupGroupEvents;
}
export default ModuleManager;
