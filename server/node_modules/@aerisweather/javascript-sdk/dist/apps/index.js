"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Apps = void 0;

var _InteractiveMapApp2 = _interopRequireDefault(require("./InteractiveMapApp"));

var _ButtonPanel = _interopRequireDefault(require("./views/ButtonPanel"));

var _InfoPanel2 = _interopRequireDefault(require("./views/InfoPanel"));

var _TimelinePanel2 = _interopRequireDefault(require("./views/TimelinePanel"));

var _LegendPanel2 = _interopRequireDefault(require("./views/LegendPanel"));

var _PlaceSearchPanel2 = _interopRequireDefault(require("./views/PlaceSearchPanel"));

var _Tooltip = _interopRequireDefault(require("./ui/Tooltip"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @ignore
 * Private class extension to better handle naming conflicts within this public interface.
 *
 * @class _InteractiveMapApp
 * @extends {Map}
 */
class _InteractiveMapApp extends _InteractiveMapApp2.default {}

class _LayersPanel extends _ButtonPanel.default {}

class _InfoPanel extends _InfoPanel2.default {}

class _TimelinePanel extends _TimelinePanel2.default {}

class _LegendPanel extends _LegendPanel2.default {}

class _PlaceSearchPanel extends _PlaceSearchPanel2.default {}
/**
 * @ignore
 */


let _account;
/**
 * @ignore
 */


let _servers;
/**
 * The `Apps` module provides the public interface for all application components that are part
 * of the SDK.
 */


var Apps;
exports.Apps = Apps;

(function (Apps) {
  // /**
  //  * Provides access to the `Apps` module's utility functions.
  //  *
  //  * @readonly
  //  * @type { [key: string]: Function }
  //  */
  // export const utils: any = {...mapUtils};

  /**
   * Sets the Aeris account instance to use with the `Views` module.
   *
   * @param {Account} account
   */
  Apps.setAccount = account => {
    _account = account;
  };
  /**
   * Sets the base paths for the API servers to use with data and image requests.
   *
   * @param {Servers} servers
   */


  Apps.setServers = servers => {
    _servers = servers;
  };
  /**
   * Initializes and returns a new `InteractiveMapApp` instance.
   *
   * @param {*} target
   * @param {InteractiveMapAppOptions} [opts]
   * @param {(map: Map) => void} [onInit]
   * @returns {InteractiveMap}
   */


  Apps.InteractiveMapApp = function (target, opts) {
    return new _InteractiveMapApp(target, Object.assign({}, opts, {
      account: _account,
      servers: opts.servers || _servers
    }));
  };

  Apps.panels = {
    LayersPanel: function (opts) {
      return new _LayersPanel(opts);
    },
    InfoPanel: function (opts) {
      return new _InfoPanel(opts);
    },
    TimelinePanel: function (timeline, opts) {
      return new _TimelinePanel(timeline, opts);
    },
    LegendPanel: function (opts) {
      return new _LegendPanel(opts);
    },
    PlaceSearchPanel: function (opts) {
      return new _PlaceSearchPanel(opts);
    }
  };
  Apps.ui = {
    Tooltip: function (content, opts) {
      return new _Tooltip.default(content, opts);
    }
  };
})(Apps || (exports.Apps = Apps = {}));