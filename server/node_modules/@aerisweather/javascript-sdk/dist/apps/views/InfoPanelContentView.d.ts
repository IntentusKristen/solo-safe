import View from '../ui/View';
import Account from '../../account/Account';
import { Units } from '../../utils/units';
import { InfoPanelContentViewOptions } from '../types/panel.interface';
import { AnyInfoPanelView } from '../types/panel.type';
/**
 * An `InfoPanelContentView` is a view component that manages and renders a series of individual
 * views to display within as an info panel's content. This object also requests remote data
 * required for the view as needed.
 *
 * @export
 * @class InfoPanelContentView
 * @extends {View<InfoPanelContentViewOptions>}
 */
declare class InfoPanelContentView extends View<InfoPanelContentViewOptions> {
    private _views;
    private _units;
    /**
     * Array of views associated with the content view.
     *
     * @readonly
     * @type {InfoPanelView[]}
     * @memberof InfoPanelContentView
     */
    get views(): AnyInfoPanelView[];
    get units(): Units;
    set units(value: Units);
    /**
     * Initializes and returns an info panel content view configured with the specified options.
     *
     * @param {InfoPanelContentViewOptions} [opts]
     * @param {*} [data]
     * @memberof InfoPanelContentView
     */
    constructor(opts?: InfoPanelContentViewOptions, data?: any);
    /**
     * Requests data for the content view and renders the view with the new data.
     *
     * @param {*} [params] Parameters to use with the data request (optional)
     * @param {*} [append] Data to append to the loaded data that is also used in the content
     * view (optional)
     * @memberof InfoPanelContentView
     */
    load(account: Account, params?: any, append?: any): void;
    update(data?: any): void;
    protected _render(data: any): string;
    protected _renderView(view: AnyInfoPanelView, data?: any, index?: number): void;
    protected _dataForView(view: AnyInfoPanelView): any;
    protected _afterRender(): void;
    protected _onAddedToDOM(): void;
}
export default InfoPanelContentView;
