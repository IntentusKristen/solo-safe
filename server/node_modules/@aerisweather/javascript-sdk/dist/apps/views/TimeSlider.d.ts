import View from '../ui/View';
import Slider, { SliderOptions } from '../ui/Slider';
import Animation from '../../maps/anim/Animation';
import { ViewOptions } from '../types';
/**
 * A data type that represents the configuration options for a timeline slider component.
 */
export interface TimeSliderOptions extends ViewOptions {
    /**
     * Configuration for the internal time range slider component.
     *
     * @type {SliderOptions}
     */
    slider: SliderOptions;
    /**
     * Date and time formatters for dates displayed in the component.
     * Values must be a string format supported by the date-fns library: https://date-fns.org/docs/format
     *
     * @type {{
     * 		time?: string;
     * 		date?: string;
     * 		day?: string;
     * 		dateFull?: string;
     * 	}}
     */
    formatters?: {
        time?: string;
        date?: string;
        day?: string;
        dateFull?: string;
    };
}
declare class TimeSlider extends View<TimeSliderOptions> {
    private _animation;
    private _slider;
    private _sliderChangeHandler;
    get slider(): Slider;
    constructor(animation: Animation, opts?: TimeSliderOptions);
    setPosition(value: number, fireEvents?: boolean): void;
    setProgress(value: number, fireEvents?: boolean): void;
    /**
     * Updates the string format for the time and day strings displayed in the component.
     * Values must be a string format supported by the date-fns library: https://date-fns.org/docs/format
     *
     * @param {{
     * 			time?: string;
     * 			date?: string;
     * 			day?: string;
     * 			dateFull?: string;
     * 		}} value
     * @memberof TimeSlider
     */
    setFormatters(value: {
        time?: string;
        date?: string;
        day?: string;
        dateFull?: string;
    }): void;
    protected _render(): string;
    protected _layout(): void;
    protected _onAddedToDOM(): void;
    protected _setupEvents(): void;
    private _updateForTime;
    private _handleDateRangeChange;
    private _layoutPeriods;
    private _setupSliderTicks;
}
export default TimeSlider;
