import Component from './Component';
import { RangeSliderOptions } from '../types';
/**
 * A data type that represents a range slider's state.
 */
export interface RangeSliderState {
    /**
     * Current bounds values.
     *
     * @type {number[]}
     */
    bounds?: number[];
    /**
     * Current handle elements.
     *
     * @type {number}
     */
    handle?: number;
    /**
     * Index of the last handle interacted with or changed.
     *
     * @type {number}
     */
    recent?: number;
}
/**
 * A `RangeSlider` is a slider component that allows you to define a value range and step interval
 * along the slider to allow a user to change values associated with the control.
 *
 * @export
 * @class RangeSlider
 * @extends {Component<RangeSliderOptions, RangeSliderState>}
 */
declare class RangeSlider extends Component<RangeSliderOptions, RangeSliderState> {
    private _points;
    private _handles;
    private _lastMovedHandle;
    private _tooltip;
    private _dragOffset;
    /**
     * Initializes and returns a range slider instance configured with the specified options.
     *
     * @param {RangeSliderOptions} [opts]
     * @memberof RangeSlider
     */
    constructor(opts?: RangeSliderOptions);
    /**
     * Current value, which is an array of values corresponding to the bounds. The first value is
     * the minimum value in the range, whereas the second value in the array is the maximum value.
     *
     * @readonly
     * @type {number[]}
     * @memberof RangeSlider
     */
    get value(): number[];
    set value(bounds: number[]);
    protected _render(): string;
    protected _afterRender(): void;
    protected _setupEvents(): void;
    private _getClosestBound;
    private _getBoundNeedMoving;
    private _getLowerBound;
    private _getUpperBound;
    private _getPoints;
    private _moveTo;
    private _trimAlignValue;
    private _ensureValueNotConflict;
    private _valueAtPosition;
    private _valueAtOffset;
    private _offsetForValue;
    private _updateTooltip;
    private _onBoundsChange;
    private _onChange;
    private _onStart;
    private _onEnd;
    private _onMove;
    private _onKeyboard;
    private _onMouseDown;
    private _onMouseUp;
    private _onMouseMove;
    private _addDocumentEvents;
    private _removeDocumentEvents;
}
export default RangeSlider;
