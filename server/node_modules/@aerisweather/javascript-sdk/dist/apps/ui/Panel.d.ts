import Component from "./Component";
import { Size } from '../../types';
import { PanelOptions, PanelState } from '../types';
/**
 * A `Panel` is a view component that functions as a common view container for any type of
 * content within an application.
 *
 * @export
 * @class Panel
 * @extends {Component<T, S>}
 * @template T
 * @template S
 */
declare class Panel<T extends PanelOptions, S extends PanelState> extends Component<T, S> {
    private _bounds;
    /**
     * Initializes and returns a panel instance configured with the specified options.
     *
     * @param {T} [opts]
     * @memberof Panel
     */
    constructor(opts?: T);
    get content(): any;
    get toolbar(): any;
    /**
     * A Boolean indicating whether the panel is currently visible.
     *
     * @readonly
     * @type {boolean}
     * @memberof Panel
     */
    get visible(): boolean;
    /**
     * Expands the panel if the panel is toggleable and collapsed.
     *
     * @returns
     * @memberof Panel
     */
    open(): void;
    /**
     * Collapses the panel if the panel is toggleable and expanded.
     *
     * @returns
     * @memberof Panel
     */
    close(): void;
    /**
     * Toggles the open/closed state.
     *
     * @memberof Panel
     */
    toggle(): void;
    /**
     * Returns the DOM element container for the view content.
     *
     * @returns {*}
     * @memberof Panel
     */
    getContentContainer(): any;
    size(): Size;
    /**
     * Returns the size required for the panel's content.
     *
     * @returns {Size}
     * @memberof Panel
     */
    contentSize(): Size;
    setContentSize(size: Size, adjustForToolbar?: boolean): void;
    setMaxContentSize(size: Size): void;
    protected _updateSize(): void;
    protected _render(): string;
    protected _layout(): void;
    protected _afterRender(): void;
    protected _onAddedToDOM(): void;
    protected _setupEvents(): void;
}
export default Panel;
